# -*- coding: utf-8 -*-
"""dmg ass2_usingADAboost

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e-TlnzNLif4-DX82zVDejThTcT9I_o0X
"""

cd ./drive/My Drive/dmg ass2

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.ensemble import AdaBoostClassifier
from sklearn.model_selection import cross_val_score  #doubt
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import pickle 


def runner(dataset_test_X_main):

    dataset= pd.read_csv("given_dataset.csv") #dataset is a dataframe
    df0 =dataset[dataset['T']==0 ]
    df1 =dataset[dataset['T']==1 ]


    X_cols=dataset.columns.values[:-1]
    Y_cols=dataset.columns.values[-1:]

    import seaborn as sns

    dataset['T'].value_counts().plot(kind='bar');
    dataset['T'].value_counts()

    ratio=1.0
    split=int(ratio*dataset.shape[0])

    X_train=dataset[X_cols][:split]
    Y_train=dataset[Y_cols][:split]






    prediction_list=[]
   

    dataset_test_X=pd.read_csv(dataset_test_X_main)
    #for i in range(100): # 200 times adaboost     #78.32


    random_df= df0
    random_df=random_df.append( df1.sample(frac = 0.018) )



    random_df['T'].value_counts()
    random_df['T'].value_counts().plot(kind='bar');



    random_df=random_df.sample(frac=1)
    X_training_sample=random_df[X_cols][0:]
    Y_training_sample=random_df[Y_cols][0:]

    model=DecisionTreeClassifier(criterion='entropy',max_depth=3)
    AdaBoost=AdaBoostClassifier(base_estimator=model,n_estimators=200)#,learning_rate=0.1)
    X_training_sample=X_training_sample.to_numpy()
    Y_training_sample=Y_training_sample['T']

    boostmodel=AdaBoost.fit(X_training_sample,Y_training_sample)

    filename = 'finalized_model_ada.sav'
    pickle.dump(boostmodel, open(filename, 'wb'))

    #saved_model_adaBoost = pickle.dumps(boostmodel)
    Y_predictedValue=boostmodel.predict(dataset_test_X)
    prediction_list.append(Y_predictedValue)

        #accuracy=accuracy_score(Y_training_sample,Y_predictedValue)
        #print(accuracy)
    #    print(i+1,"  is done ,", 60-i-1,"is left")



    import numpy as np

    prediction_list=np.array(prediction_list)
    print(prediction_list)
    print(prediction_list.shape)


    from scipy import stats

    m = stats.mode(prediction_list)
    print(m)


    Y_predictedValue_testData=m[0][0]

    data={'id':[],'T':[]}
    df=pd.DataFrame(data)


    dataset_final = pd.DataFrame({'T': Y_predictedValue_testData[0:,]})
    print(dataset_final)

    # Place the DataFrames side by side
    horizontal_stack = pd.concat([dataset_test_X['id'],dataset_final], axis=1)
    print(horizontal_stack)

    horizontal_stack.to_csv('ada_boost_file1.csv',index=False)







dataset_test_X_main= "to_predict.csv"
runner(dataset_test_X_main)