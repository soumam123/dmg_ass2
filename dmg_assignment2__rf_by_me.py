# -*- coding: utf-8 -*-
"""DMG_assignment2 _RF_by me.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19aJe1AOpKm8zFTjoNTK8VaM7ox4TdGXL
"""

cd ./drive/My Drive/dmg ass2

from sklearn.model_selection import cross_val_score  #doubt
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import pandas as pd
import matplotlib.pyplot as plt
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import pickle 

def runner(dataset_test_X_main):

    dataset= pd.read_csv("given_dataset.csv") #dataset is a dataframe
    dataset['T'].value_counts().plot(kind='bar');
    dataset['T'].value_counts()


    dataset= pd.read_csv("given_dataset.csv") #dataset is a dataframe
    df0 =dataset[dataset['T']==0 ]
    df1 =dataset[dataset['T']==1 ]


    X_cols=dataset.columns.values[:-1]
    Y_cols=dataset.columns.values[-1:]



    ratio=1.0
    split=int(ratio*dataset.shape[0])

    X_train=dataset[X_cols][:split]
    Y_train=dataset[Y_cols][:split]

    X_test=dataset[X_cols][split:]
    Y_test=dataset[Y_cols][split:]




    ####BAGGING with random forest


    prediction_list=[]

    dataset_test_X=pd.read_csv(dataset_test_X_main)

    for i in range(200):


        random_df= df0
        random_df=random_df.append( df1.sample(frac = 0.018) )

        random_df=random_df.sample(frac=1)
        X_training_sample=random_df[X_cols][0:]
        Y_training_sample=random_df[Y_cols][0:]


        clf= DecisionTreeClassifier(max_depth=25,criterion="gini") #n_samples
        clf=clf.fit(X_training_sample,Y_training_sample)

        Y_predictedValue=clf.predict(dataset_test_X)
        prediction_list.append(Y_predictedValue)

        #accuracy=accuracy_score(Y_training_sample,Y_predictedValue)

        #print(accuracy)
        print(i+1,"  is done ,", 200-i-1,"is left")



    random_df['T'].value_counts()
    random_df['T'].value_counts().plot(kind='bar');


    import numpy as np

    prediction_list=np.array(prediction_list)
    print(prediction_list)
    print(prediction_list.shape)



    np.save('pred_npy_random_forest_from_scratch.npy',prediction_list)#saving the model 200 times was not possible thus saved the .npy file
    from scipy import stats

    m = stats.mode(prediction_list)
    print(m)


    Y_predictedValue_testData=m[0][0]
    data={'id':[],'T':[]}
    df=pd.DataFrame(data)


    dataset_final = pd.DataFrame({'T': Y_predictedValue_testData[0:,]})
    print(dataset_final)
    # Place the DataFrames side by side
    horizontal_stack = pd.concat([dataset_test_X['id'],dataset_final], axis=1)
    print(horizontal_stack)

    horizontal_stack.to_csv('file1.csv',index=False)




dataset_test_X_main= "to_predict.csv"
runner(dataset_test_X_main)